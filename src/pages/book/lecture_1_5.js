import React from "react";
import { Helmet } from "react-helmet";
import Navbar from "../components/Nav/Navbar";
import Footer from "../components/Footer/Footer";
import Button from "../components/Button/Button";
import imgBook_1_19 from "./imgBook/1_19.png";
import imgBook_1_20 from "./imgBook/1_20.png";
import imgBook_1_21 from "./imgBook/1_21.png";
import imgBook_1_22 from "./imgBook/1_22.png";
import imgBook_1_23 from "./imgBook/1_23.png";
import imgBook_1_24 from "./imgBook/1_24.png";
import imgBook_1_25 from "./imgBook/1_25.png";
import './book.css';


const lecture_1_5 = () => {
    return (
        <div>
            <Helmet>
                <meta charSet="utf-8" />
                <title>Тема 1.5. Системы автоматического диагностирования</title>
            </Helmet>
            <Navbar />
            <div className="main">
                <div className="main_item">
                    <h2 className="h2_main">Раздел 1. Организация технического обслуживания ЭВМ</h2>
                    <h3 className="h3_main">Тема 1.5. Системы автоматического диагностирования</h3>
                    <Button link_left="/book/lecture_1_4" link_rigth="/book/lecture_1_6" />
                    <div className="charter">
                        Быстро растущие компьютерные парки организаций требуют более тщательного технического обслуживания, поэтому растет численность обслуживающего персонала и повышаются требования к его квалификации. Увеличение надежности СВТ приводит к тому, что поиск неисправных компонентов СВТ и их ремонт производятся относительно редко, и это приводит к потере эксплуатационным персоналом определенных навыков отыскания и устранения неисправностей. Таким образом, возникает проблема обслуживания непрерывно усложняющихся компонентов СВТ в условиях, когда не хватает персонала высокой квалификации.<br></br>
                        Современная вычислительная техника решает эту проблему путем создания <b>систем автоматического диагностирования неисправностей</b>, которые призваны облегчить обслуживание и ускорить ремонт компьютерного парка организации.<br></br>
                        <b>Система автоматического диагностирования</b> представляет собой комплекс программных, микропрограммных, аппаратных средств и справочной документации (диагностических справочников, инструкций, тестов). Различают системы <b>тестового</b> и <b>функционального диагностирования</b>. В системах тестового диагностирования воздействия на диагностируемое устройство поступают от средств диагностирования. В системах же функционального диагностирования воздействия, поступающие на диагностируемое устройство, заданы рабочим алгоритмом функционирования.<br></br>
                        Классификация средств диагностирования приведена на рис. 1.19.<br></br>
                        <div className="h3_main"><img src={imgBook_1_19} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.19.</b> Классификация средств автоматического диагностирования</div>
                        В ПК обычно используются встроенные или специализированные средства диагностирования и встроенные средства подачи тестовых воздействий на внешние универсальные средства (например, сигнатурные анализаторы) для снятия ответов и анализа результатов.<br></br>
                        Процесс диагностирования состоит из определенных <b>этапов (элементарных проверок)</b>, каждый из которых характеризуется подаваемым на устройство тестовым или рабочим воздействием и снимаемым с устройства ответом. Получаемое значение ответа (набор значений сигналов в контрольных точках) называют <b>результатом элементарной проверки</b>.<br></br>
                        Совокупность элементарных проверок, их последовательность и правила обработки результатов определяют <b>алгоритм  диагностирования</b>, который бывает <b>условным</b> и <b>безусловным</b>. Алгоритм диагностирования называют безусловным, если он задает одну фиксированную последовательность реализации элементарных проверок. Алгоритм диагностирования называют условным, если он задает несколько различных последовательностей реализации элементарных проверок.<br></br>
                        Объектом элементарной проверки является неисправный компонент диагностируемого устройства, на проверку которого рассчитано тестовое или рабочее воздействие элементарной проверки.<br></br>
                        Средства диагностирования позволяют устройству (например компьютеру) самостоятельно локализовать неисправность при условии исправности <b>диагностического ядра</b> — той части аппаратуры, которая должна быть заведомо работоспособной до начала процесса диагностирования.<br></br>
                        При диагностировании СВТ наиболее широкое распространение получил <b>принцип раскрутки</b>, или <b>принцип расширяющихся областей</b>, заключающийся в том, что на каждом этапе диагностирования ядро и аппаратура уже проверенных исправных областей устройства становятся средствами тестового диагностирования, а аппаратура очередной проверяемой области является объектом диагностирования.<br></br>
                        Процесс диагностирования по принципу раскрутки (расширяющихся областей) следующий: диагностическое ядро проверяет аппаратуру первой области; затем проверяется аппаратура второй области с использованием ядра и уже проверенной первой области, и т. д. При этом диагностическое ядро (встроенные средства тестового диагностирования) реализует следующие функции:
                        <ul>
                            <li>загрузку диагностической информации;</li>
                            <li>подачу тестовых воздействий на вход проверяемого блока;</li>
                            <li>опрос ответов с выхода проверяемого блока;</li>
                            <li>сравнение полученных ответов с ожидаемыми (эталонными);</li>
                            <li>анализ и индикацию результатов.</li>
                        </ul>
                        Для выполнения этих функций встроенные средства тестового диагностирования в общем случае содержат:
                        <ul>
                            <li>устройства ввода и накопители диагностической информации (тестовых воздействий, ожидаемых ответов, закодированных алгоритмов диагностики);</li>
                            <li>блок управления чтением и выдачей тестовых воздействий, снятием ответа, анализом и выдачей результатов диагностирования;</li>
                            <li>блок коммутации, позволяющий соединить выходы диагностируемого блока с блоком сравнения;</li>
                            <li>блок сравнения и устройство вывода результатов диагностирования.</li>
                        </ul>
                        Перечисленные блоки и устройства могут быть частично или полностью совмещены с аппаратурой ЭВМ. Например, в качестве устройства ввода может использоваться клавиатура, в качестве накопителя — часть оперативной памяти, в качестве блока управления — процессор, в качестве блока сравнения — имеющиеся в ЭВМ схемы сравнения (АЛУ), в качестве блока коммутации — средства индикации состояния аппаратуры ЭВМ, а в качестве устройства вывода результатов — монитор ЭВМ.
                        <div className="h3_main"><img src={imgBook_1_20} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.20.</b> Структурная схема средств тестового диагностирования на базе сервисного процессора</div>
                        Таким образом, встроенные средства диагностирования имеют практически те же блоки и устройства, что и сама ПЭВМ. Поэтому не удивительно, что с развитием интегральной микроэлектроники и массовым выпуском недорогих ПК последние стали все чаще использовать в качестве средств диагностирования ЭВМ. Такие специализированные компьютеры, используемые в целях обслуживания и диагностирования ЭВМ, получили название <b>сервисных процессоров</b> (рис. 1.20).<br></br>
                        <b>Сервисные процессоры</b> — это процессоры, выполняющие операции, связанные с обслуживанием компьютера: контроль и индикацию состояния, пультовые операции, диагностирование и восстановление, связь с удаленным центром об­служивания. Благодаря своим универсальным возможностям и развитой периферии, включая жесткий диск, клавиатуру и дисплей, сервисные процессоры обеспечивают комфортные условия работы и предоставление результатов диагностирования обслуживающему персоналу в максимально удобной форме.<br></br>
                        С развитием СВТ повысилась интеллектуальность сервисных процессоров, выполняющих различные функции:
                        <ul>
                            <li>автоматический запуск диагностических тестов;</li>
                            <li>точное определение неисправностей и выдача сообщений
                                о них в отредактированной форме;</li>
                            <li>прогнозирование отказов на основе обработки сообщений
                                об ошибках;</li>
                            <li>связь с удаленным центром обслуживания;</li>
                            <li>защита от ошибок оператора;</li>
                            <li>сбор данных о подключении устройств и т. д.</li>
                        </ul>
                        В современных серверах уже присутствуют достаточно мощные встроенные сервисные процессоры самотестирования.<br></br>
                        Для классификации технических решений, используемых при реализации систем диагностирования, рассмотрим понятие <b>метода диагностирования</b>. Он включает в себя три основных элемента:
                        <ul>
                            <li>объект элементарной проверки;</li>
                            <li>способ подачи воздействия;</li>
                            <li>возможность снятия ответа.</li>
                        </ul>
                        Существуют следующие <b>методы тестового диагностирования</b>:
                        <ul>
                            <li>метод командного ядра;</li>
                            <li>методы диагностирования на уровне логических схем (двухэтапное диагностирование, метод последовательного сканирования);</li>
                            <li>метод эталонных состояний;</li>
                            <li>метод микродиагностирования;</li>
                            <li>метод диагностирования, ориентированного на проверку сменных блоков.</li>
                        </ul>
                        <b>Методы функционального диагностирования</b> включают в себя:
                        <ul>
                            <li>диагностирование с помощью схем встроенного контроля</li>
                            <li>диагностирование с помощью самопроверяемого дублирования;</li>
                            <li>диагностирование по регистрации состояния.</li>
                        </ul>
                        Процесс разработки систем диагностирования состоит из следующих этапов (рис. 1.21):
                        <ul>
                            <li>выбор метода диагностирования;</li>
                            <li>разработка аппаратных средств диагностирования</li>
                            <li>разработка диагностических тестов;</li>
                            <li>разработка диагностических справочников;</li>
                            <li>проверка качества разработанной системы диагностирования.</li>
                        </ul>
                        <div className="h3_main"><img src={imgBook_1_21} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.21.</b> Этапы проектирования систем тестового диагностирования</div>
                        Рассмотрим различные методы диагностирования более подробно.
                        <h4 className="h3_main">Метод командного ядра</h4>
                        Этот метод основан на использовании программных средств автоматического диагностирования.<br></br>
                        В системе команд ЭВМ выделяется ядро команд, включающее в себя:
                        <ul>
                            <li>команды, необходимые для загрузки тестов (в том числе специальные диагностические команды);</li>
                            <li>этапы сравнения результатов с эталонными с ветвлением по несовпадению результатов;</li>
                            <li>выдачу диагностического сообщения обслуживающему персоналу.</li>
                        </ul>
                        Объектом элементарной проверки при этом методе являются компоненты СВТ, используемые при выполнении программных команд (процессор, оперативная память, регистры и т. д.).<br></br>
                        При выполнении различных команд может быть выявлено «пересечение» подозреваемых компонентов СВТ. Исключение из рассмотрения исправных компонентов аппаратуры может повысить глубину поиска дефекта при диагностировании.<br></br>
                        Недостатком этого метода является значительный объем диагностического ядра.
                        <h4 className="h3_main">Метод двухэтапного диагностирования</h4>
                        Это метод диагностирования, при котором объектами элементарных проверок на разных этапах диагностирования являются схемы с памятью (регистры и триггеры) и комбинационные схемы. Он представляет собой частный случай метода диагностирования на уровне логических схем.<br></br>
                        Диагностирование СВТ по этому методу выполняется в два этапа:
                        <ul>
                            <li>на первом этапе проверяются все регистры и триггеры, которые могут быть установлены с помощью операции «Установка» и опрошены по дополнительным выходам операцией «Опрос»;</li>
                            <li>на втором этапе проверяются все комбинационные схемы, а также регистры и триггеры, не имеющие непосредственной установки или опроса.</li>
                        </ul>
                        Алгоритм такого диагностирования показан на рис. 1.22.
                        <div className="h3_main"><img src={imgBook_1_22} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.22.</b> Алгоритм тестирования по методу двухэтапного диагностирования</div>
                        В тестах первого этапа управляющая информация отсутствует, так как после установки сразу выполняется опрос.<br></br>
                        В тестах, предназначенных для проверки комбинационных схем, управляющая информация задает адрес микрооперации приема сигнала с выхода комбинационной схемы в выходной регистр диагностирования.<br></br>
                        Диагностическая информация включает в себя данные тестового воздействия, результат и состав контрольных точек элементарной проверки, а также адреса следующих элементарных проверок в алгоритме диагностирования, и имеет стандартный формат, называемый <b>тестом локализации неисправностей</b>.<br></br>
                        Подача тестовых воздействий, снятие ответа, анализ и выдача результатов реализации алгоритма диагностирования выполняются с помощью стандартных диагностических операций «Установка», «Опрос», «Сравнение» и «Ветвление».<br></br>
                        Метод двухэтапного диагностирования использует, как правило, условный алгоритм диагностирования, поэтому тест локализации неисправностей содержит два адреса ветвления, задающих начальный адрес в оперативной памяти.<br></br>
                        Для хранения результатов, как правило, используется жесткий диск или CD-R, а для ввода — клавиатура.<br></br>
                        Тесты локализации неисправностей обычно загружаются в оперативную память и догружаются в нее по окончании выполнения очередной группы операций. Поэтому до начала диагностики по данному методу проверяется оперативная память и жесткий диск.<br></br>
                        При обнаружении отказа на мониторе отображается номер теста, по которому в диагностическом справочнике отыскивается неисправный сменный блок.
                        <h4 className="h3_main">Метод последовательного сканирования</h4>
                        Метод последовательного сканирования является вариантом метода двухэтапного диагностирования, при котором схемы с памятью (регистры и триггеры) в режиме диагностирования превращаются в один <b>сдвигающий регистр</b> с возможностью его установки в произвольное состояние и опроса с помощью простой операции сдвига.<br></br>
                        Этот метод получил распространение в ЭВМ на больших интегральных микросхемах (БИС) и в настоящее время уже достаточно устарел. Вместе с очевидными достоинствами БИС, их использование затрудняет проблему диагностирования ЭВМ в связи с ограниченными возможностями доступак схемам, расположенным внутри БИС. При диагностировании ЭВМ, построенной на БИС, возникает проблема проверки БИС, содержащих комбинационные схемы и схемы с памятью, при небольшом числе дополнительных входов и выходов. Такое диагностирование также выполняется в два этапа.
                        <h4 className="h3_main">Метод микродиагностирования</h4>
                        Метод микродиагностирования характеризуется тем, что объектом элементарной проверки здесь являются компоненты СВТ, участвующие в выполнении микроопераций (процессор).<br></br>
                        <b>Микродиагностика</b> — это совокупность процедур, диагностических микропрограмм и специальных схем, обеспечивающих транспортировку тестового набора на вход проверяемого блока, выполнение проверяемой микрооперации, транспортировку результатов проверки к схемам анализа, сравнение с эталоном и ветвление по результатам сравнения.<br></br>
                        Различают два типа микродиагностики:
                        <ul>
                            <li>встроенная;</li>
                            <li>загружаемая.</li>
                        </ul>
                        В случае <b>встроенной микродиагностики </b>диагностические микропрограммы размещаются в постоянной микропрограммной памяти ПК (например, в BIOS), а при <b>загружаемой микродиагностике</b> — на внешнем носителе данных.<br></br>
                        При хранении в постоянной микропрограммной памяти микродиагностика представляет собой обычную микропрограмму, использующую стандартный набор микроопераций. Однако вследствие ограниченного объема постоянной микропрограммной памяти на объем микродиагностики накладываются довольно жесткие ограничения, в результате чегоприходится использовать различные способы сжатия информации. Для этой цели иногда используют специальные
                        <b>микрокоманды генерации тестовых наборов</b>, что позволяет уменьшить требуемый для тестовых констант объем микропрограммной памяти (CMOS). Как правило, при хранении микродиагностики в постоянной микропрограммной памяти для транспортировки результатов проверки к месту сравнения с эталоном используются стандартные микрооперации, а для сравнения — такие схемы как сумматор, схемы контроля или анализа условий. В качестве микропрограммы анализа используется также микропрограмма опроса состояния
                        схем контроля ЭВМ.<br></br>
                        Встроенная микродиагностика обычно применяется в персональных компьютерах.<br></br>
                        Для серверов при большом объеме микродиагностики применяется загружаемая микродиагностика. Существует несколько вариантов загрузки и выполнения загружаемой микродиагностики (рис. 1.23):
                        <ol>
                            <li>внешний носитель данных — регистр микрокоманд;</li>
                            <li> внешний носитель данных — оперативная память — регистр микрокоманд;</li>
                            <li>внешний носитель данных — загружаемая управляющая память микрокоманд — регистр микрокоманд.</li>
                        </ol>
                        <div className="h3_main"><img src={imgBook_1_23} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.23.</b> Несколько вариантов загрузки микродиагностики
                        </div>
                        В качестве устройства ввода при микродиагностике чаще всего используются CD-R, CD-RW, DVD-R, DVD-RW, USB устройства и пр.<br></br>
                        <i>Первый вариант</i> загрузки скорее имитирует «быстрый» тактовый режим, чем выполнение микрокоманд с реальным быстродействием, так как накопление и выполнение микрокоманд определяются скоростью ввода данных с внешнего носителя. Микрокоманды при этом выполняются по мере их
                        поступления из внешнего носителя данных.<br></br>
                        <i>Второй вариант</i> загрузки предусматривает возможность хранения и выполнения микрокоманд из основной памяти ЭВМ, т. е. подразумевает совместимость форматов оперативной и управляющей памяти. В этом варианте должен быть предусмотрен специальный вход в регистр микрокоманд из оперативной памяти.<br></br>
                        <i>Третий вариант</i> обеспечивает загрузку в управляющую память микродиагностики определенного объема и ее выполнение с реальным быстродействием. По окончании ее выполнения загружается следующая порция микродиагностики.<br></br>
                        Существуют и другие варианты загрузки и выполнения, несущественно отличающиеся от перечисленных выше. Возможно также использование различных вариантов загрузки и выполнения на разных этапах диагностирования ЭВМ.<br></br>
                        Процедура выполнения микродиагностики обычно такова:
                        <ul>
                            <li>средства тестового диагностирования загружают в ЭВМ микрокоманды и дают приказ на их выполнение;</li>
                            <li>ЭВМ отрабатывает микрокоманды, после чего средства тестового диагностирования производят опрос состояния, сравнение с эталоном и выдают сообщение о неисправности.</li>
                        </ul>
                        Обычно при микродиагностике тестовые наборы являются частью микрокоманды <b>(поле констант)</b>. Глубина поиска дефекта при микродиагностике зависит от количества схем, для которых предусмотрена возможность непосредственного опроса состояния. В связи с этим в современных ЭВМ имеется возможность непосредственного опроса состояния практически всех триггеров и регистров ЭВМ.
                        <h4 className="h3_main">Метод эталонных состояний</h4>
                        Метод эталонных состояний характеризуется тем, что объектом элементарных проверок здесь являются компоненты СВТ, используемые на одном или нескольких тактах выполнения рабочего алгоритма функционирования, реализуемого в режиме диагностирования (рис. 1.24).
                        <div className="h3_main"><img src={imgBook_1_24} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.24.</b> Обобщенная схема системы диагностики, реализующей метод эталонных состояний
                        </div>
                        В качестве результата элементарной проверки используется состояние аппаратных средств диагностируемого устройства. Процесс диагностирования по методу эталонных состояний заключается в потактовом выполнении рабочих алгоритмов, опросе состояния на каждом такте, сравнении этого состояния с эталонным и ветвлении в зависимости от исхода сравнения к выполнению следующего такта или к сообщению о неисправности. Другими словами, суть описываемого метода состоит в том, что имеется несколько алгоритмов тестирования, в процессе выполнения которых на вход тестируемого устройства последовательно подаются различные наборы тестовых сигналов, затем производится считывание состояния тестируемого устройства, и оно сравнивается с эталонным значением для указанного набора тестовых сигналов. В случае их различия выводится сообщение об ошибке. Блок-схема этого метода приведена на рис. 1.25.
                        <div className="h3_main"><img src={imgBook_1_25} alt="" /></div>
                        <div className="h3_main"><b>Рис. 1.25.</b>  Блок-схема работы метода эталонных состояний
                        </div>
                        При реализации метода эталонных состояний средства тестового диагностирования представляют собой совокупность аппаратных и программных средств.<br></br>
                        Обычно этот метод используется в случаях, когда средства тестового диагностирования имеют достаточно большие возможности. Например, этот метод может использоваться при диагностировании каналов с помощью процессора. Наибольшее применение данный метод находит в устройствах со схемной интерпретацией алгоритмов функционирования.
                        <h4 className="h3_main">Метод диагностирования с помощью схем встроенного контроля</h4>
                        Этот метод характеризуется тем, что объектом элементарной проверки здесь является сменный блок, а средствами функционального диагностирования являются <b>схемы встроенного контроля (СВК)</b>, конструктивно совмещенные с каждым сменным блоком.<br></br>
                        Диагностируемое устройство называется <b>полностью проверяемым</b>, если любая его неисправность заданного класса обнаруживается СВК в момент ее первого проявления на выходных устройствах. Заметим, что требование полной проверки и самопроверки СВК приводит к значительным аппаратурным затратам, что ограничивает применяемость данного метода. Достоинством же метода диагностирования с помощью схем встроенного контроля является практически мгновенное диагностирование сбоев и отказов, сокращение затрат на локализацию перемежающихся отказов и на разработку диагностических тестов.
                        <h4 className="h3_main">Метод диагностирования с помощью самопроверяемого дублирования</h4>
                        Этот метод аналогичен предыдущему, так как он тоже основан на принципе самопроверки сменных блоков. Разница же состоит в том, что самопроверяемость сменных блоков достигается введением в них дублирующей аппаратуры и самопроверяемых схем сжатия, обеспечивающих получение сводного сигнала ошибки, свидетельствующего о неисправности сменного блока. Этот способ обеспечения самопроверки тоже приводит к большим дополнительным затратам аппаратуры.
                        <h4 className="h3_main">Метод диагностирования по результатам регистрации состояния</h4>
                        Этот метод диагностирования характеризуется тем, что неисправность или сбой локализуется по состоянию ЭВМ, зарегистрированному в момент проявления ошибки и содержащему информацию о состоянии схем контроля, регистров ЭВМ, адресов микрокоманд, предшествующих моменту появления ошибки, и др. Место возникновения ошибки определяется по зарегистрированному состоянию путем прослеживания пути ошибки от места ее проявления до места ее возникновения. При этом диагностика выполняется с помощью программных средств диагностирования самой ЭВМ, если диагностируется место возникновения сбоя, либо другим ПК, если диагностируется отказ. В СВТ, имеющих сервисные процессоры, такая диагностика выполняется с помощью микропрограмм сервисного процессора.
                    </div>
                </div>
            </div>
            <Footer />
        </div>
    )
}

export default lecture_1_5